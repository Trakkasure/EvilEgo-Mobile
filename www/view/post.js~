PostView = Backbone.View.extend({
    template: ''
  , events: {
        'click #add_point': 'addPoint'
      , 'click #remove_point': 'removePoint'
    }
  , initialize: function(model) {
      this.model = model
      $.ajax({
          method: 'get'
        , url: '/templates/
    }
  , render: function() {
      $('li').html( _.template($('script#postTemplate'),this.model.toJSON())
      return this
    }
  , addPoint() {
      this.model.addPoint()
    }
  , addPoint() {
      this.model.removePoint()
    }

})

PostListView = Backbone.View.extend({
    el: $('#postList')
  , events: {
        'click #addPost': 'newPost'
    }
  , initialize: function(collection){
      _.bindAll(this, 'render', 'newPost', 'addPost', ''appendPost'); // remember: every function that uses 'this' as the current object should be in here
      this.collection = collection
      this.collection.bind('add', this.appendPost); // collection event binder
    }
  , addPost: function(post){ // adding a model to a view. Converts to a view object and appends the view
      this.collection.add(post); // add item to collection; view is updated via event 'add'
    }
  , appendPost: function(post){
      $('ul', this.el).append("<li>"+item.get('part1')+" "+item.get('part2')+"</li>");
    }
  , newPost: function() {
      window.location.hash = '#post/new'
    }
  , render: function() {

    }
})

PostFormView = Backbone.View.extend({
    el:$('#postList')
  , events: {
        'click #add_point': 'addPoint'
      , 'click #remove_point': 'removePoint'
    }
  , initialize: function(model) {
      this.model = model
    }
  , render: function() {
    }
  , addPoint() {
      this.model.addPoint()
    }
  , addPoint() {
      this.model.removePoint()
    }
})
